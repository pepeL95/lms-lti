<!DOCTYPE html>
<html lang="en-us">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Cybersecurity Assignment</title>
  </head>
  <body style="text-align: center; padding: 0; border: 0; margin: 0">
    <canvas
      id="unity-canvas"
      width="100vw"
      height="100vh"
      style="width: 99vw; height: 99vh; background: #231f20"
    ></canvas>
    <script src="Build/public.loader.js"></script>
    <script>
      if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
        // Mobile device style: fill the whole browser client area with the game canvas:
        var meta = document.createElement('meta')
        var myGameInstance = null
        meta.name = 'viewport'
        meta.content =
          'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes'
        document.getElementsByTagName('head')[0].appendChild(meta)

        var canvas = document.querySelector('#unity-canvas')
        canvas.style.width = '100%'
        canvas.style.height = '100%'
        canvas.style.position = 'fixed'

        document.body.style.textAlign = 'left'
      }

      createUnityInstance(document.querySelector('#unity-canvas'), {
        dataUrl: 'Build/273aebc8fc6451c35a04e070902fa2e6.data',
        frameworkUrl: 'Build/1e86c9344249dbd9f5d23ee8587033ed.js',
        codeUrl: 'Build/c3d8b1ad7d3c783605869a7f6a56f820.wasm',
        streamingAssetsUrl: 'StreamingAssets',
        companyName: 'DefaultCompany',
        productName: 'Testing',
        productVersion: '0.1',
        // matchWebGLToCanvasSize: false, // Uncomment this to separately control WebGL canvas render size and DOM element size.
        // devicePixelRatio: 1, // Uncomment this to override low DPI rendering on high DPI displays.
      }).then((unityInstance) => {
        myGameInstance = unityInstance
        const studentName = '<%-student_name%>'
        console.log(studentName)
        const setStudentName = (studentName) => {
          myGameInstance.SendMessage(
            'ScriptableObjHandler',
            'SetName',
            studentName
          )
        }
        setStudentName(studentName)
      })
    </script>
  </body>
</html>
